language: minimal
os: linux

# Integration tests need to run first to reset the PR build status to pending
stages:
  - name: 'Lint markdown files'
  - name: 'Integration tests'
  - name: 'Benchmarking tests'
  - name: 'SourceClear and Lint'
  - name: 'Unit Tests'
  - name: 'Prepare for release'
    if: env(PREP) = true and type = api
  - name: 'Release'
    if: env(RELEASE) = true and type = api

jobs:
  include:
    - &integrationtest
      stage: 'Integration tests'
      language: minimal
      os: linux
      env:
        - SDK=objective-c
        - BUILD_NUMBER=${TRAVIS_JOB_NUMBER/.}
        - TESTAPP_TAG=master
        - SDK_BRANCH=$TRAVIS_PULL_REQUEST_BRANCH
      cache: false
      before_install: skip
      install: skip
      before_script:
        - mkdir $HOME/travisci-tools && pushd $HOME/travisci-tools && git init && git pull https://$CI_USER_TOKEN@github.com/optimizely/travisci-tools.git && popd
      script:
        - $HOME/travisci-tools/trigger-script-with-status-update.sh
      after_success: travis_terminate 0
    - <<: *integrationtest
      stage: 'Benchmarking tests'
      env: SDK=objective-c FULLSTACK_TEST_REPO=Benchmarking BUILD_NUMBER=${TRAVIS_JOB_NUMBER/.} SDK_BRANCH=$TRAVIS_PULL_REQUEST_BRANCH

    - stage: 'Lint markdown files'
      language: ruby
      rvm: 2.4.1
      os: linux
      install: gem install awesome_bot
      script:
        - find . -type f -name '*.md' -exec awesome_bot {} \;
      notifications:
        email: false

    - stage: 'Lint markdown files'
      language: node_js
      node_js: 12
      os: linux
      before_install: skip
      install:
        - npm i -g markdown-spellcheck
      before_script:
        - wget --quiet https://raw.githubusercontent.com/optimizely/mdspell-config/master/.spelling
      script:
        - mdspell -a -n -r --en-us '**/*.md'
      after_success: skip

    - stage: 'SourceClear and Lint'
      language: objective-c
      os: osx
      addons:
        srcclr: true
      install: gem install cocoapods
      script:
        - pod spec lint --quick

    - &unittests
      stage: 'Unit Tests'
      language: objective-c
      os: osx
      osx_image: xcode10
      branches:
        only:
          - master
      env: SCHEME=OptimizelySDKiOS TEST_SDK=iphonesimulator PLATFORM='iOS Simulator' OS=9.1 NAME='iPad Air'
      name: PLATFORM='iOS Simulator' OS=9.1 NAME='iPad Air'
      before_install:
        - gem install slather --no-document --quiet
      script:
        - if [[ "$TRAVIS_BRANCH" == "master" ]]; then xcodebuild test -quiet -workspace OptimizelySDK.xcworkspace -scheme $SCHEME -configuration Release CODE_SIGN_IDENTITY="" CODE_SIGNING_REQUIRED=NO -sdk $TEST_SDK -destination "platform=$PLATFORM,OS=$OS,name=$NAME" ONLY_ACTIVE_ARCH=YES | egrep -B 10 -A 10 "(error|failed|crash|exit|FAILED|Failing|failures)"; fi
      after_success:
        - slather
        - sleep 5 # https://github.com/travis-ci/travis-ci/issues/4725
    - <<: *unittests
      env: SCHEME=OptimizelySDKiOS TEST_SDK=iphonesimulator PLATFORM='iOS Simulator' OS=10.1 NAME='iPhone 7 Plus'
      name: PLATFORM='iOS Simulator' OS=10.1 NAME='iPhone 7 Plus'
    - <<: *unittests
      env: SCHEME=OptimizelySDKiOS TEST_SDK=iphonesimulator PLATFORM='iOS Simulator' OS=10.3.1 NAME='iPhone 7'
      name: PLATFORM='iOS Simulator' OS=10.3.1 NAME='iPhone 7'
    - <<: *unittests
      env: SCHEME=OptimizelySDKiOS-Universal TEST_SDK=iphonesimulator PLATFORM='iOS Simulator' OS=11.1 NAME='iPhone 6s'
      name: PLATFORM='iOS Simulator' OS=11.1 NAME='iPhone 6s'
    - <<: *unittests
      env: SCHEME=OptimizelySDKTVOS TEST_SDK=appletvsimulator PLATFORM='tvOS Simulator' OS=10.2 NAME='Apple TV 1080p'
      name: PLATFORM='tvOS Simulator' OS=10.2 NAME='Apple TV 1080p'
    - <<: *unittests
      env: SCHEME=OptimizelySDKTVOS-Universal TEST_SDK=appletvsimulator PLATFORM='tvOS Simulator' OS=9.2 NAME='Apple TV 1080p'
      name: PLATFORM='tvOS Simulator' OS=9.2 NAME='Apple TV 1080p'

    - stage: 'Prepare for release'
      name: Prepare for release
      language: objective-c
      os: osx
      osx_image: xcode10
      env:
        - VERSION=3.1.3
      install:
        # install hub
        - wget https://github.com/github/hub/releases/download/v2.11.2/hub-darwin-amd64-2.11.2.tgz -O /tmp/hub-darwin-amd64-2.11.2.tgz && tar -xvf /tmp/hub-darwin-amd64-2.11.2.tgz -C /usr/local/opt && ln -s /usr/local/opt/hub-darwin-amd64-2.11.2/bin/hub /usr/local/bin/hub
      script:
        - Scripts/run_prep.sh

    - stage: 'Release'
      name: Push to cocoapods.org
      language: minimal
      os: osx
      osx_image: xcode10
      env:
        - VERSION=3.1.3
      install:
        # install hub
        - wget https://github.com/github/hub/releases/download/v2.11.2/hub-darwin-amd64-2.11.2.tgz -O /tmp/hub-darwin-amd64-2.11.2.tgz && tar -xvf /tmp/hub-darwin-amd64-2.11.2.tgz -C /usr/local/opt && ln -s /usr/local/opt/hub-darwin-amd64-2.11.2/bin/hub /usr/local/bin/hub
        # upgrade cocoapods
        - gem install cocoapods -v '1.6.1'
      script:
        - Scripts/run_release.sh
